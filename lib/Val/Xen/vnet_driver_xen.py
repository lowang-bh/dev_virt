#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
 File Name: vnet_driver_xen.py
 Author: longhui
 Created Time: 2018-03-05 14:06:59
 Descriptions:
 host_metrics    PIF_metrics               VIF_metrics    VM_metrics
      |              |                           |            |
     host <-----    PIF    ----->network<-----  VIF----->    VM
'''

import time
from lib.Log.log import log
from lib.Val.vnet_driver import VnetDriver
from lib.Val.Xen import XenAPI

API_VERSION_1_1 = '1.1'


class XenVnetDriver(VnetDriver):
    '''
    '''

    def __init__(self, hostname=None, user="root", passwd=""):
        VnetDriver.__init__(self, hostname, user, passwd)
        self._hypervisor_handler = None

        self._hypervisor_handler = self.get_handler()

    def __del__(self):
        try:
            if self._hypervisor_handler is not None:
                self._hypervisor_handler.xenapi.session.logout()
                self._hypervisor_handler = None
        except Exception, error:
            log.debug(error)

    def get_handler(self):
        '''
        return the handler of the virt_driver
        '''
        if self._hypervisor_handler is not None:
            return self._hypervisor_handler

        if self.hostname is None:
            self._hypervisor_handler = XenAPI.xapi_local()  #no __nonzero__, can not use if/not for bool test
        else:
            log.debug("connecting to %s with user:%s,passwd:%s", "http://" + str(self.hostname), self.user, self.passwd)
            self._hypervisor_handler = XenAPI.Session("http://" + str(self.hostname))
        try:
            self._hypervisor_handler.xenapi.login_with_password(self.user, self.passwd, API_VERSION_1_1, 'XenVirtDriver')
        except Exception, error:
            log.exception("Exception raised:%s when get handler.", error)
            return None

        return self._hypervisor_handler

    def delete_handler(self):
        '''
        release the session
        '''
        try:
            if self._hypervisor_handler is not None:
                self._hypervisor_handler.xenapi.session.logout()
                self._hypervisor_handler = None
        except Exception, error:
            log.debug(error)

    def get_vswitch_list(self):
        """
        """
        pass

    def get_PIF_by_device(self, device_name):
        """
        @param device_name: interface name in Host, eg, eth0,etc
        """

    def get_network_by_PIF(self, pif_ref):
        """
        @param pif_ref:
        @return: a reference to network
        """

    def create_new_vif(self, vm_ref, network_ref, device_index):
        """
        """
        record = {'MAC': '',
                 'MAC_autogenerated': True,
                 'MTU': '0',
                 'other_config': {},
                 'qos_algorithm_params': {},
                 'qos_algorithm_type': ''}
        record['VM'] = vm_ref
        record['network'] = network_ref
        record['device'] = str(device_index)
        handler = self.get_handler()
        new_vif = handler.xenapi.VIF.create(record)
        return new_vif
